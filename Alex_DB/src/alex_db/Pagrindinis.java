/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package alex_db;

import com.microsoft.sqlserver.jdbc.SQLServerDataSource;
import db_lab.UpdateIrasas;
import java.io.DataOutput;
import java.sql.Connection;
import java.sql.Date;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author asdfas
 */
public class Pagrindinis extends javax.swing.JFrame {

    /**
     * Creates new form Pagrindinis
     */
    public Pagrindinis() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {//GEN-BEGIN:initComponents

        DateLabel4 = new java.awt.Label();
        LastNameFilter = new javax.swing.JTextField();
        GetInfoBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        DataOutput = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        DateLabel3 = new java.awt.Label();
        FirstNameFilter = new javax.swing.JTextField();
        DateLabel5 = new java.awt.Label();
        LastNameFilter1 = new javax.swing.JTextField();
        label3 = new java.awt.Label();
        KategorijaSearch = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        FromYear = new javax.swing.JComboBox();
        FromMonth = new javax.swing.JComboBox();
        FromDay = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        ToYear = new javax.swing.JComboBox();
        ToMonth = new javax.swing.JComboBox();
        ToDay = new javax.swing.JComboBox();
        SearchBtn = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        DateLabel4.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        DateLabel4.setText("Pavardė");

        LastNameFilter.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        GetInfoBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        GetInfoBtn.setText("Pateikti duomenis apie klientus");
        GetInfoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetInfoBtnActionPerformed(evt);
            }
        });

        DataOutput.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(DataOutput);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Žaidimų duomenų bazė");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setText("Filtravimas");

        DateLabel3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        DateLabel3.setText("Vardas");

        FirstNameFilter.setToolTipText("");

        DateLabel5.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        DateLabel5.setText("Pavardė");

        LastNameFilter1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        label3.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        label3.setText("Žaidimo kategorija");

        KategorijaSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        KategorijaSearch.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Visos Kategorijos", "Nuotykiu", "Veiksmo", "Šaudykles", "Platformeris", "Lenktyniu", "Siaubo" }));
        KategorijaSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KategorijaSearchActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("Užsakymo data nuo");

        FromYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Metai", "2017", "2018", "2019", "2020" }));

        FromMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mėnuo", "Sausis", "Vasaris", "Kovas", "Balandis", "Gegužė", "Birželis", "Liepa", "Rugpjūtis", "Rugsėjis", "Spalis", "Lapkritis", "Gruodis", " " }));

        FromDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diena", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Užsakymo data iki");

        ToYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Metai", "2017", "2018", "2019", "2020" }));

        ToMonth.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mėnuo", "Sausis", "Vasaris", "Kovas", "Balandis", "Gegužė", "Birželis", "Liepa", "Rugpjūtis", "Rugsėjis", "Spalis", "Lapkritis", "Gruodis", " " }));

        ToDay.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Diena", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        SearchBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SearchBtn.setText("Ieškoti");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        jButton1.setText("Redaguoti pasirinktą įrašą");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Įterpti naują įrašą");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(89, 89, 89)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DateLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DateLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(FirstNameFilter, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                                    .addComponent(LastNameFilter1)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(KategorijaSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(74, 74, 74)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(FromYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FromMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(FromDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(ToYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(SearchBtn)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(ToMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(ToDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))))
                        .addGap(62, 62, 62)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(277, 277, 277)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(GetInfoBtn)
                                .addGap(116, 116, 116)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(GetInfoBtn)
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DateLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FirstNameFilter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DateLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(LastNameFilter1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(KategorijaSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)
                                .addGap(17, 17, 17)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FromYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FromMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FromDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ToYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ToMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ToDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(SearchBtn)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }//GEN-END:initComponents

    private void GetInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetInfoBtnActionPerformed

        Connection con = null;

        try {

              SQLServerDataSource ds = new SQLServerDataSource();
              ds.setServerName("localhost");
              ds.setPortNumber(1433);
              ds.setDatabaseName("Alekxxx");
              ds.setUser("aleksandra");
              ds.setPassword("Ogurciikamera03");

            con = ds.getConnection();
            
            String TableNameq = "SELECT Naudotojas.Kliento_Nr, Naudotojas.Vardas, Naudotojas.Pavarde, Zaidimas.Pavadinimas, Zaidimas.Kategorija, Uzsakymas.Uzsakymo_Data\n"
                    + "FROM NAUDOTOJAS, ZAIDIMAS, UZSAKYMAS, SUDARO\n"
                    + "WHERE Naudotojas.Kliento_Nr = Uzsakymas.Kliento_Nr AND Uzsakymas.Uzsakymo_Nr = Sudaro.Uzsakymo_Nr\n"
                    +"AND Sudaro.Zaidimo_Nr = Zaidimas.Zaidimo_Nr";

            Statement statement = con.createStatement();

            ResultSet set = statement.executeQuery(TableNameq);

            DefaultTableModel model = new DefaultTableModel();

            DataOutput.setModel(model);

            model.addColumn("Kliento ID");
            model.addColumn("Vardas");
            model.addColumn("Pavardė");
            model.addColumn("Žaidimo pavadinimas");
            model.addColumn("Žaidimo žanras");
            model.addColumn("Užsakymo data");

            while(set.next())
            {
                int KID=set.getInt("Kliento_Nr");
                String Vardas = set.getString("Vardas");
                String Pavarde = set.getString("Pavarde");
                String Kpav = set.getString("Pavadinimas");
                String Gpav = set.getString("Kategorija");
                Date UzsakymoDate = set.getDate("Uzsakymo_Data");

                model.addRow(new Object[]{KID, Vardas, Pavarde, Kpav, Gpav, UzsakymoDate});
            }

        }
        catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_GetInfoBtnActionPerformed

    private void KategorijaSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KategorijaSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KategorijaSearchActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        
        Connection con = null;

        try {

            SQLServerDataSource ds = new SQLServerDataSource();
              ds.setServerName("localhost");
              ds.setPortNumber(1433);
              ds.setDatabaseName("Alekxxx");
              ds.setUser("aleksandra");
              ds.setPassword("Ogurciikamera03");

            con = ds.getConnection();
            
            String FirstNameQ= FirstNameFilter.getText().toString();
            String LastNameQ= LastNameFilter1.getText().toString();
            String DateFrom = "";
            String DateTo="";
            String MenuoFrom = FromMonth.getSelectedItem().toString();
            String MenuoTo = ToMonth.getSelectedItem().toString();
            
            String TableNameq = "SELECT Naudotojas.Kliento_Nr, Naudotojas.Vardas, Naudotojas.Pavarde, Zaidimas.Pavadinimas, Zaidimas.Kategorija, Uzsakymas.Uzsakymo_Data\n"
                    + "FROM NAUDOTOJAS, ZAIDIMAS, UZSAKYMAS, SUDARO\n"
                    + "WHERE Naudotojas.Kliento_Nr = Uzsakymas.Kliento_Nr AND Uzsakymas.Uzsakymo_Nr = Sudaro.Uzsakymo_Nr\n"
                    +"AND Sudaro.Zaidimo_Nr = Zaidimas.Zaidimo_Nr";

            
            if(FirstNameQ.length()!=0)
            {
                TableNameq = TableNameq + " AND Naudotojas.Vardas LIKE '%"+ FirstNameQ + "%' \n";
            }
            
            if(LastNameQ.length()!=0)
            {
                TableNameq = TableNameq + " AND Naudotojas.Pavarde LIKE '%"+ LastNameQ + "%' \n";
            }
            
            if(KategorijaSearch.getSelectedIndex()!=0)
            {
                TableNameq = TableNameq + " AND Zaidimas.Kategorija = '" + KategorijaSearch.getSelectedItem().toString() + "'\n";
            }
            
            String Menuo="";
            String Menuo2="";
            
            switch(MenuoFrom)
            {
                case "Sausis": Menuo = "01"; break; case "Vasaris": Menuo = "02"; break; case "Kovas": Menuo = "03"; break; 
                case "Balandis": Menuo = "04"; break; case "Gegužė": Menuo = "05"; break; case "Birželis": Menuo = "06"; break; 
                case "Liepa":  Menuo = "07"; break; case "Rugpjūtis":  Menuo = "08"; break; case "Rugsėjis": Menuo = "09"; break; 
                case "Spalis":  Menuo = "10"; break; case "Lapkritis":  Menuo = "11"; break; case "Gruodis": Menuo = "12"; break; 
            }
            
            switch(MenuoTo)
            {
                case "Sausis": Menuo2 = "01"; break; case "Vasaris": Menuo2 = "02"; break; case "Kovas": Menuo2 = "03"; break; 
                case "Balandis": Menuo2 = "04"; break; case "Gegužė": Menuo2 = "05"; break; case "Birželis": Menuo2 = "06"; break; 
                case "Liepa":  Menuo2 = "07"; break; case "Rugpjūtis":  Menuo2 = "08"; break; case "Rugsėjis": Menuo2 = "09"; break; 
                case "Spalis":  Menuo2 = "10"; break; case "Lapkritis":  Menuo2 = "11"; break; case "Gruodis": Menuo2 = "12"; break; 
            }
            
            DateFrom = FromYear.getSelectedItem().toString()+"-"+ Menuo +"-"+FromDay.getSelectedItem().toString();
            
            DateTo = ToYear.getSelectedItem().toString()+"-"+ Menuo2 +"-"+ToDay.getSelectedItem().toString();
            
            
            if(FromYear.getSelectedIndex()!=0 && FromMonth.getSelectedIndex()!=0 && FromDay.getSelectedIndex()!=0)
            {
                TableNameq = TableNameq + " AND Uzsakymas.Uzsakymo_Data > '" + DateFrom + "'\n";
            }
            
             if(ToYear.getSelectedIndex()!=0 && ToMonth.getSelectedIndex()!=0 && ToDay.getSelectedIndex()!=0)
            {
                TableNameq = TableNameq + " AND Uzsakymas.Uzsakymo_Data < '" + DateTo + "'\n";
            }
            
            System.out.println(TableNameq);
            
            
            Statement statement = con.createStatement();

            ResultSet set = statement.executeQuery(TableNameq);

            DefaultTableModel model = new DefaultTableModel();

            DataOutput.setModel(model);

            model.addColumn("Kliento ID");
            model.addColumn("Vardas");
            model.addColumn("Pavardė");
            model.addColumn("Žaidimo pavadinimas");
            model.addColumn("Žaidimo žanras");
            model.addColumn("Užsakymo data");

            while(set.next())
            {
                int KID=set.getInt("Kliento_Nr");
                String Vardas = set.getString("Vardas");
                String Pavarde = set.getString("Pavarde");
                String Kpav = set.getString("Pavadinimas");
                String Gpav = set.getString("Kategorija");
                Date UzsakymoDate = set.getDate("Uzsakymo_Data");

                model.addRow(new Object[]{KID, Vardas, Pavarde, Kpav, Gpav, UzsakymoDate});
            }

        }
        catch (SQLException e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        int eilute=DataOutput.getSelectedRow();
        
        if(eilute==-1)
        {
           JOptionPane.showMessageDialog(new JFrame(), "Pasirinkite eilute", "Klaida", JOptionPane.ERROR_MESSAGE); 
        }
        
        int ID = (Integer) DataOutput.getModel().getValueAt(eilute, 0);
        String Vardas = DataOutput.getModel().getValueAt(eilute, 1).toString();
        String Pavarde = DataOutput.getModel().getValueAt(eilute, 2).toString();
        String Zaidimas = DataOutput.getModel().getValueAt(eilute, 3).toString();
        String Data = DataOutput.getModel().getValueAt(eilute, 5).toString();
        
        
        
        
        try{
        Connection con= null;
         SQLServerDataSource ds = new SQLServerDataSource();
              ds.setServerName("localhost");
              ds.setPortNumber(1433);
              ds.setDatabaseName("Alekxxx");
              ds.setUser("aleksandra");
              ds.setPassword("Ogurciikamera03");
            
            con = ds.getConnection();
               
            String TableNameq = "SELECT Uzsakymas.Uzsakymo_Data FROM Uzsakymas WHERE Kliento_Nr = "+ID;
                       
            Statement statement = con.createStatement();
            
            ResultSet set = statement.executeQuery(TableNameq);
                            
        }
        catch(SQLException e){e.printStackTrace();}
        
        
        Update UI = new Update(this, true);
        String IDD = Integer.toString(ID);
        UI.IDLabel.setText(IDD);
        UI.NameTextField.setText(Vardas);
        UI.LastNameField.setText(Pavarde);
        UI.GameUpdate.setSelectedItem(Zaidimas);
        
       String Menesis = Data.substring(5, 7);
       String Metai = Data.substring(0, 4);
       String Diena = Data.substring(8, 10);
       
       
       int Menesiss= Integer.parseInt(Menesis) -1;
       
       UI.FromMonth.setSelectedIndex(Menesiss);
       UI.FromYear.setSelectedItem(Metai);
       UI.FromDay.setSelectedItem(Diena);
       
       
       
        
        UI.setVisible(true);
   /*     UI.NameTextField.setText(Vardas);
        UI.LastNameField.setText(Pavarde);
        UI.KlinikaUpdate.setSelectedIndex(0);
        UI.DateUpdate.setText(Data);
        UI.AKField.setText(AK);
        
        UI.DisplayID.setText(IDD);
        UI.setVisible(true); */
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       
        Connection con = null;
        
        try {
            
            SQLServerDataSource ds = new SQLServerDataSource();
              ds.setServerName("localhost");
              ds.setPortNumber(1433);
              ds.setDatabaseName("Alekxxx");
              ds.setUser("aleksandra");
              ds.setPassword("Ogurciikamera03");
            int KID=0;
            
            con = ds.getConnection();
            
          String TableNameq = "SELECT Naudotojas.Kliento_Nr, Naudotojas.Vardas, Naudotojas.Pavarde, Zaidimas.Pavadinimas, Zaidimas.Kategorija, Uzsakymas.Uzsakymo_Data\n"
                    + "FROM NAUDOTOJAS, ZAIDIMAS, UZSAKYMAS, SUDARO\n"
                    + "WHERE Naudotojas.Kliento_Nr = Uzsakymas.Kliento_Nr AND Uzsakymas.Uzsakymo_Nr = Sudaro.Uzsakymo_Nr\n"
                    +"AND Sudaro.Zaidimo_Nr = Zaidimas.Zaidimo_Nr";

            Statement statement = con.createStatement();

            ResultSet set = statement.executeQuery(TableNameq);

            DefaultTableModel model = new DefaultTableModel();

            DataOutput.setModel(model);

            model.addColumn("Kliento ID");
            model.addColumn("Vardas");
            model.addColumn("Pavardė");
            model.addColumn("Žaidimo pavadinimas");
            model.addColumn("Žaidimo žanras");
            model.addColumn("Užsakymo data");

            while(set.next())
            {
                KID=set.getInt("Kliento_Nr");
                String Vardas = set.getString("Vardas");
                String Pavarde = set.getString("Pavarde");
                String Kpav = set.getString("Pavadinimas");
                String Gpav = set.getString("Kategorija");
                Date UzsakymoDate = set.getDate("Uzsakymo_Data");

                model.addRow(new Object[]{KID, Vardas, Pavarde, Kpav, Gpav, UzsakymoDate});
            }
            
        int newKID = KID+1;
        
        String kidlabel = Integer.toString(newKID);
                
        Insert CK = new Insert(this,true);      
        CK.CreateClientTitle.setText(kidlabel);
        CK.setVisible(true);
          
        }
        catch (SQLException e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pagrindinis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pagrindinis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pagrindinis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pagrindinis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pagrindinis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTable DataOutput;
    public java.awt.Label DateLabel3;
    public java.awt.Label DateLabel4;
    public java.awt.Label DateLabel5;
    private javax.swing.JTextField FirstNameFilter;
    private javax.swing.JComboBox FromDay;
    private javax.swing.JComboBox FromMonth;
    private javax.swing.JComboBox FromYear;
    public javax.swing.JButton GetInfoBtn;
    public javax.swing.JComboBox KategorijaSearch;
    private javax.swing.JTextField LastNameFilter;
    private javax.swing.JTextField LastNameFilter1;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JComboBox ToDay;
    private javax.swing.JComboBox ToMonth;
    private javax.swing.JComboBox ToYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    public java.awt.Label label3;
    // End of variables declaration//GEN-END:variables
}
